name: Birth a New Example

on:
  workflow_dispatch:
    inputs:
      name:
        description: "The directory for the new project (e.g. node/express or python/flask)"
        required: true
      from:
        description: "The source branch to copy from"
        required: false
        default: "main"

permissions:
  id-token: write
  contents: write

jobs:
  create-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.from }}
          submodules: recursive
          fetch-depth: 0

      - name: Set git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create New Branch
        run: |
          BRANCH_NAME=${THE_NAME//\//-}
          git rev-parse --verify $BRANCH_NAME >/dev/null 2>&1 && { echo "Branch '$BRANCH_NAME' already exists."; exit 1; }
          git checkout -b $BRANCH_NAME
        env:
          THE_NAME: ${{ github.event.inputs.name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ github.event.inputs.from == 'main' }}
        name: Clear submodules
        run: |
          grep -oP '(?<=path = ).*' .gitmodules | xargs -I {} git submodule deinit -f {}
          grep -oP '(?<=path = ).*' .gitmodules | xargs -I {} git rm -f {}
          grep -oP '(?<=path = ).*' .gitmodules | xargs -I {} rm -rf {}
          grep -oP '(?<=path = ).*' .gitmodules | xargs -I {} git config -f .git/config --remove-section submodule.{}
          git add .gitmodules
          git add .
          git commit -m "Clear submodules" || echo "No changes to commit"

      - if: ${{ github.event.inputs.from == 'main' }}
        name: Clean Directory
        run: |
          mv .templates /tmp/.templates
          rm -fr .github
          rm .gitignore
          rm .gitmodules
          rm README.md
          git add .
          git commit -m "Clean directory" || echo "No changes to commit"

      - if: ${{ github.event.inputs.from == 'main' }}
        name: Add Templates
        run: |
          mkdir -p .github/workflows
          cp /tmp/.templates/scaffoldly.yml .github/workflows/scaffoldly.yml
          cp /tmp/.templates/README.md README.md
          git add .
          git commit -m "Initialize Template" || echo "No changes to commit"

      - name: Push changes
        run: |
          BRANCH_NAME=${THE_NAME//\//-}
          git push origin $BRANCH_NAME --force
        env:
          THE_NAME: ${{ github.event.inputs.name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  add-submodule:
    runs-on: ubuntu-latest
    needs: create-branch
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add Submodule
        run: |
          BRANCH_NAME=${THE_NAME//\//-}
          git config --global url."https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"
          git submodule add -b $BRANCH_NAME https://github.com/scaffoldly/scaffoldly-examples.git $THE_NAME
          git submodule update --init --recursive
          git submodule set-url $THE_NAME git@github.com:scaffoldly/scaffoldly-examples.git
          git submodule sync
          git add .gitmodules
          git commit -m "Create $BRANCH_NAME submodule" || echo "No changes to commit"
        env:
          THE_NAME: ${{ github.event.inputs.name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        run: |
          git push origin HEAD --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
